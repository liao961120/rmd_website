---
title: "Rmarkdown Features"
subtitle: "This is subtitle"
author: Yongfu Liao
date: March 18, 2018
bibliography: /Users/user/local_depend/citation/neanderthals.bib
csl: /Users/user/local_depend/style_sheets/apa-no-doi-no-issue.csl
link-citations: yes
output:
  html_document:
    css: /Users/user/local_depend/style_sheets/style.css
    df_print: kable
    toc: true
    toc_depth: 4
    toc_float: true
---



```{r setup, include=FALSE}
knitr::opts_chunk$set(
	echo = TRUE,
	message = FALSE,
	warning = FALSE,
	dev='svg',
	fig.dim = c(5.5, 3.5)  # (width, height)
)
```

yaml Setup {.tabset}
-----------------------------
Include the code in yaml header.

### Citation

Include the code in yaml header.

```{yaml}
bibliography: ./citation/neanderthals.bib
csl: ./citation/apa-no-doi-no-issue.csl
link-citations: yes
```

### HTML Output Options

```{yaml}
output:
  html_document:
    css: ../style_sheets/style.css
    df_print: kable
    code_folding: hide
    fig_width: 7
    fig_height: 6
    toc: true
    toc_depth: 4
    toc_float: true
```


Dynamic Variables
-----------------------------

Include **R Code Chunks' Variables** in the body of text.

```{r}
alpha <- 1:3
text <- c("a", "b")
```


1. The numeric variable $\alpha =$ `r alpha[1]`.
    ```{yaml}
    # The numeric variable $\alpha =$ `r alpha[1]`.
    ```

2. The string variable $text =$ `r text[1]`.
    ```{yaml}
    # The string variable $text =$ `r text[1]`.
    ```

$\LaTeX$ Rendering {.tabset}
-----------------------------
### Passing Matrix Object

#### Setup

Add `results='asis'` to r code chunk option.
```{r results='asis'}
library(mat2tex)
mt <- c(1,2)
"$A =" %_% xm(mt,0) %_%"_{2 \\times 1}$"
```

#### Include Matrix in Text

![](mat2tex.png){width=85% height=auto .rounded}

renders as:

<div class="success">
This is the variable `mt`,
```{r results='asis', echo=FALSE}
library(mat2tex)
mt <- matrix(1:4, 2,2)
"$A =" %_% xm(mt,0) %_%"^{-1}$"
```
, which is a matrix.
</div>

Check [here](http://markheckmann.github.io/mat2tex/){target=_blank""} for more information.

### kable
```{r}
library(knitr)
library(dplyr)
iris_data <- head(iris) %>%
    select(Sepal.Length, Sepal.Width)

colnames(iris_data) <- c("$\\alpha$", "$\\frac{a}{b}$")
kable(iris_data, format = "markdown", align = "c")
```

### Plotting Expression
```{r fig.height=3}
library(latex2exp)
library(ggplot2)
iris_data2 <- iris[c(1:3, 50:53, 100:103), ] %>%
    select(Sepal.Length, Sepal.Width, Species)

iris_data2 %>% ggplot() +
    geom_point(aes(x = Sepal.Length, 
                   y = Sepal.Width, 
                   color = Species)) +
    labs(x = TeX("Length($\\frac{kg}{cm^2}$)"),
         y = TeX("\\frac{a}{b}"))
```


Citations 
-----------------------------

To include **Citations**, [Read this](https://rmarkdown.rstudio.com/authoring_bibliographies_and_citations.html){target="_blank"}.

The text cited [@RN9].

@RN15 主張...

### Include `.bib` file in Reference {.tabset}

#### Specific Refs
Include specific references that were **not cited** in the body of text.
```{pandoc}
---
nocite: |
  @item1, @item2
...
```

#### All Refs
Include **All references** in the body of text.
```{pandoc}
---
nocite: |
  @*
...
```

Emphasis {.tabset}
-----------------------------

### Full Example
```{html}
<div class="success">
| This is pragraph one. [**Red text**]{.red}, line 1. Text text text text.
| This is [line 2]{style="color:rgba(255, 0, 0, 1)"} of paragraph one. 

Paragraph two starts here.
</div>
```

<div class="success">
| This is line 1, pragraph one. [**Red text**]{.red}. Text text text text.
| This is [line 2]{style="color:rgba(255, 0, 0, 1)"} of paragraph one. 

Paragraph two starts here.
</div>

### Colored divs
There are 4 choices of classes, defined in my stylesheet[^css]: 

1. success
2. warning
3. warning
4. error

```{html}
<div class="error">
some text in the colored region
</div>
```

<div class="error">
some text in the colored region
</div>

### New Line
```{markdown}
| Text of line 1
| Text of line 2

New paragraph
```

<div class="warning">
| Text of line 1
| Text of line 2

New paragraph
</div>

### Attach Attributes
By using `[`text`]`, pandoc turns the text in the square brackets into the HTML `<span>` tag. HTML `class`, `id`, attributes specific to `<span>` can then be attached by using the curly braces.

#### `class`
```{markdown}
[**Red Bold text**]{.red}
```
<div class="warning">
[**Red Bold text**]{.red}
</div>

Note[^red].

#### Other Attributes
```{markdown}
Add color through [span style]{style="color:rgba(255, 0, 0, 1)"}
```
<div class="warning">
Add color through [span style]{style="color:rgba(255, 0, 0, 1)"}
</div>

Footnotes with Paragraphs
-----------------------------
Check [Pandoc](http://pandoc.org/MANUAL.html#footnotes){target="_blank"} for details.

```{markdown}
[^longnote]: Here's one with multiple blocks.

    Subsequent paragraphs are indented to show that they
belong to the previous footnote.

    In this way, multi-paragraph footnotes work like multi-paragraph list items.
```
- Output[^longnote].


Shaped Images {.tabset}
-----------------------------

### Rounded Edge
```{html}
![](../../local_depend/icons/libreoffice.ico){width=auto height="30%" .rounded}
```
![](/Users/user/local_depend/icons/libreoffice.ico){width=auto height="30%" .rounded}

### Circle Image
```{html}
![](../../local_depend/icons/libreoffice.ico){width=auto height="30%" .circle}
```
![This is figure Caption](/Users/user/local_depend/icons/libreoffice.ico){width=auto height="30%" .circle}







<!-- footnotes ---------------------------- -->
[^css]: Look at my [stylesheet](https://github.com/liao961120/local_depend/blob/master/style_sheets/style.css){target="_blank"} for syntax details.

[^longnote]: Here's one with multiple blocks.

    Subsequent paragraphs are indented to show that they
belong to the previous footnote.

    In this way, multi-paragraph footnotes work like multi-paragraph list items.

[^red]: `.red` is also a self-defined class in my stylesheet.
<!-- footnotes -------------------------- -->


<!-- syntax for Reference section --> 

Figures
-----------------------------

### Captions
Include `fig.cap='An Caption of the Plot'` in the code chunk option gives:
```{r fig.cap='An Caption of the Plot'}
library(ggplot2)
ggplot(iris)+
    geom_point(aes(x=Sepal.Length, y=Sepal.Width, color=Species))
```



References
-----------------------------